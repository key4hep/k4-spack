

# for compatibility with old git versions on centos
variables:
  GIT_STRATEGY: clone
  K4_JOBTYPE: Nightlies
  SPACK_VERSION: 

stages:
    - compilation
    - deployment


# this job expects the following setup on the runner:
# * environment variables GITHUB_TOKEN and GITHUB_USER

#   set in .bashrc - to be able to query lates commits
# *  (for the nightlies) existing installation of key4hep-stack (stable version) in /cvmfs/sw.hsf.org/spackages
#   (or whatever is defined in upstreams.yaml)
#   this may be read-only - could be delivered by cvmfs
# * writeable directory in /cvmfs/sw-nightlies.hsf.org  / cvmfs/sw.hsf.org
#   (or whatever is defined in config.yaml)

# for the cvmfs deployment:
# * the gitlab-runner user must be able to ssh into the cvmfs publisher
# * the cvmfs publisher must be able to rsync with the build machine



# note that currently the hash of the installed dd4hep is hardcoded
# to avoid rebuilds of everything.
build-spack-nightlies:
    stage: compilation
    tags:
        - k4-build-spack-nightlies
    only:
      refs:
          - tags
          - schedules # Only execute this on scheduled "nightly" pipelines
      variables:
          - $K4_JOBTYPE == "Nightlies"
    script:
        # set up spack inside the k4-spack repo
        - if [ -n "$SPACK_VERSION" ]; then git clone  https://github.com/key4hep/spack
; cd spack; git checkout $SPACK_VERSION; cd ..; else git clone --depth 1 https://github.com/key4hep/spack
 fi 
        - source spack/share/spack/setup-env.sh
        # register k4 package recipes with spack
        - spack repo add --scope site .
        # get the right config files to the right places
        - cp config/packages.yaml spack/etc/spack/
        - cp config/cvmfs_build/upstreams.yaml spack/etc/spack/
        - cp config/cvmfs_build/config-nightlies.yaml spack/etc/spack/config.yaml
        # compiler setup 
        - spack load gcc
        - spack compiler find --scope site
        - export K4_LATEST_SETUP_PATH=/cvmfs/sw-nightlies.hsf.org/spackages/latest/setup.sh
        # compile onwards and upwards
        # use hash of currently installed dd4hep to avoid rebuilding everything 
        - spack install key4hep-stack@master-`date -I` ^/pnixyp3tfmn



deploy-cvmfs-nightlies:
    stage: deployment
    needs: ["build-spack-nightlies"]
    tags:
        - k4-build-spack-nightlies
    only:
      refs:
          - tags
          - schedules # Only execute this on scheduled "nightly" pipelines
      variables:
          - $K4_JOBTYPE == "Nightlies"
    script:
        - ssh cvswnighthsforg@cvmfs-sw-nightlies-hsf-org.cern.ch ' bash -c ./cvmfs_deploy.sh'


build-spack-release:
    stage: compilation
    tags:
        - k4-build-spack-release
    only:
      refs:
          - tags
          - schedules # Only execute this on scheduled "nightly" pipelines
      variables:
          - $K4_JOBTYPE == "Release"
    script:
        # set up spack inside the k4-spack repo
        - if [ -n "$SPACK_VERSION" ]; then git clone  https://github.com/key4hep/spack
; cd spack; git checkout $SPACK_VERSION; cd ..; else git clone --depth 1 https://github.com/key4hep/spack
 fi 
        - source spack/share/spack/setup-env.sh
        # register k4 package recipes with spack
        - spack repo add --scope site .
        # get the right config files to the right places
        - cp config/packages.yaml spack/etc/spack/
        - cp config/cvmfs_build/upstreams.yaml spack/etc/spack/
        - cp config/cvmfs_build/config.yaml spack/etc/spack/config.yaml
        # compiler setup 
        - spack load gcc
        - spack compiler find --scope site
        # compile onwards and upwards
        # use hash of currently installed dd4hep to avoid rebuilding everything 
        - export K4_LATEST_SETUP_PATH=/cvmfs/sw.hsf.org/spackages/latest/setup.sh
        - spack install key4hep-stack@`date -I`

deploy-cvmfs-release:
    stage: deployment
    needs: ["build-spack-release"]
    tags:
        - k4-build-spack-release
    only:
      refs:
          - tags
          - schedules # Only execute this on scheduled "nightly" pipelines
      variables:
          - $K4_JOBTYPE == "Release"
    script:
        - ssh cvswhsforg@cvmfs-sw-hsf-org.cern.ch ' bash -c ./cvmfs_deploy.sh'
